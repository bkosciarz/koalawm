TODO:
----------------------------
    TILING
    -----
    Switch between desktops and retiling
    Function to retile the WM or tile the WM after a window is added
	Algorithm for basic tiling of WM
		size of root window, # of windows, etc
		See stack() function in monster-wm
		In Monster WM they do not tile while mapping, they tile after mapping the windows. 
	Window Handling
		Requests to map a new window are handled by handleMapRequest(params);
		Window x,y,width,height are set using configureWindows(params). 
		Mapped to the screen with xcb_map_window(params)



	Remember:
		Error Handling pls
	    Document Code







LONGTERM:
----------------------------
	PANEL? :D :D :D 
    	not a single clue of how to do this

WORKING ON:
-----------------------------
Justin
	Figuring out which window is currently active / user is interacting with
    Close window with MASTERKEY + C
    	Remove from linked list
    	Remove from X
    	Cleanup dynamic memory

Bart


TEST/CHECK:
-----------------------------
	AddWindowToDesktop(): Check that windows are added to linked list correctly
	Check for memory leaks


KNOWN BUGS
-----------------------------
    Launching with dmenu opens window & gives control to native window manager(not DISPLAY 1)
    	will this be fixed if the window manager is actully ran (it would be DISPLAY 0?)
    Terminal does not call map request on start up, unclear why. (
    	probably same reason as above, not being run on DISPLAY 1)
    Google Chrome does not close all instances on cleanup






DONE:
-----------------------------
Bart
 	Data structure for keys
		modifier, key, function, args
	Jump Table for keys in config.h, handle key function updated (#include config after data struct declarations)
		array of keys
	Data structure for Desktop
		head pointer for linked list, tail pointer for linked list, # Windows
    Data structure for Master(is that name fine? 10/10 name)
        head pointer to desktop ll, size of screen, bool to show the panel, num desktops        
	Linked List of Windows
		stored in Desktop data struct
	Data structure for window
		x, y, width, height,  next pointer, prev pointer

Justin
	Set up masks on root window to redirect x requests to WM
		Substructure Redirect
	Handle window configuration and mapping
		Set up helper functions for configuration and mapping
		Handle mapRequest event
	Handle key presses and register key presses based off of jump table
	Cleanup of dynamically allocated memory and windows on close
	Event Jump Table

